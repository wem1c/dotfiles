### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Your preferred terminal emulators
set $term kitty

# Your preferred application launcher
set $menu tofi-run | xargs swaymsg exec --
set $drun tofi-drun --drun-launch=true

# Power menu script
set $powermenu ~/.config/sway/scripts/power-menu.sh

### Idle configuration
exec swayidle -w\
    timeout 300 'swaylock -f --grace 12 --fade-in 10'\
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'pgrep swaylock || swaylock -f --fade-in 0 && true'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

## Lock Screen
 bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term
         
    # Open the power menu
    bindsym $mod+Shift+e exec $powermenu

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $drun
    bindsym $mod+Shift+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload


# Moving around:
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

	# Move the focused workspace
    set $mode_move_all_workspace_windows "MV WRKSPC"
    mode $mode_move_all_workspace_windows {
        bindsym 1 [workspace="__focused__"] move to workspace 1; mode "default"
        bindsym 2 [workspace="__focused__"] move to workspace 2; mode "default"
        bindsym 3 [workspace="__focused__"] move to workspace 3; mode "default"
        bindsym 4 [workspace="__focused__"] move to workspace 4; mode "default"
        bindsym 5 [workspace="__focused__"] move to workspace 5; mode "default"
        bindsym 6 [workspace="__focused__"] move to workspace 6; mode "default"
        bindsym 7 [workspace="__focused__"] move to workspace 7; mode "default"
        bindsym 8 [workspace="__focused__"] move to workspace 8; mode "default"
        bindsym 9 [workspace="__focused__"] move to workspace 9; mode "default"
        bindsym 0 [workspace="__focused__"] move to workspace 10; mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+shift+a mode $mode_move_all_workspace_windows

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym $mod+a focus parent

# Resizing containers:
mode "resize" {
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Volume
bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $WOBSOCK
bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $WOBSOCK
bindsym --locked XF86AudioMute exec pamixer -t && ( pamixer --get-mute && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK

# Player
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Backlight
bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

# Screenshots
bindsym print exec ~/.config/scripts/grimshot.sh --notify copy output
bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh

# Other
focus_on_window_activation smart
